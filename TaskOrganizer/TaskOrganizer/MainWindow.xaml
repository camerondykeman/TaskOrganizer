<Window x:Class="TaskOrganizer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Taskly" Height="413" Width="525" Loaded="Window_Loaded" Closing="Window_Closing" MinWidth="450" MinHeight="300">
    
    <Window.Resources>

        <SolidColorBrush x:Key="GlyphBrush" Color="#999" />

        <!-- TreeViewItem Style-->
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid
          Width="15"
          Height="13"
          Background="Transparent">
                            <Path x:Name="ExpandPath"
            HorizontalAlignment="Left" 
            VerticalAlignment="Center" 
            Margin="1,1,1,1"
            Fill="{StaticResource GlyphBrush}"
            />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked"
               Value="True">
                                <Setter Property="Data"
                TargetName="ExpandPath"
                Value="M 0 4 L 8 4 L 4 8 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0,0,0,0"
                 StrokeThickness="5"
                 Stroke="Black"
                 StrokeDashArray="1 2"
                 Opacity="0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="{x:Type TreeViewItem}"
            TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background"
                Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,
                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,
                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding"
                Value="1,0,0,0"/>
            <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FocusVisualStyle"
                Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <StackPanel>
                            <Border Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="19" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton x:Name="Expander"
    	                                Style="{StaticResource ExpandCollapseToggleStyle}"
    	                                IsChecked="{Binding Path=IsExpanded,
    	                                RelativeSource={RelativeSource TemplatedParent}}"
    	                                ClickMode="Press"/>
                                    <ContentPresenter x:Name="PART_Header"
    						            Grid.Column="1"
                                        ContentSource="Header"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                </Grid>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Margin="19,0,0,0" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded"
                                Value="false">
                                <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems"
                                Value="false">
                                <Setter TargetName="Expander"
                                    Property="Visibility"
                                    Value="Hidden"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader"
                                        Value="false"/>
                                    <Condition Property="Width"
                                        Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header"
                                    Property="MinWidth"
                                     Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader"
                                    Value="false"/>
                                    <Condition Property="Height"
                                    Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header"
                                Property="MinHeight"
                                Value="19"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected"
                                Value="true">
                                <Setter TargetName="Bd"
                                     Property="Background"
                                    Value="#FFA7E63B"/>
                                <Setter Property="Foreground"
                                 Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected"
                                        Value="true"/>
                                    <Condition Property="IsSelectionActive"
                                        Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd"
                                    Property="Background"
                                     Value="#FFA7E63B"/>
                                <Setter Property="Foreground"
                                       Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled"
                                Value="false">
                                <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="treeViewItemTemplate" TargetType="{x:Type TreeViewItem}">
            <StackPanel>
                <Border Name="Bd"
      Background="{TemplateBinding Background}"
      BorderBrush="{TemplateBinding BorderBrush}"
      BorderThickness="{TemplateBinding BorderThickness}"
      Padding="{TemplateBinding Padding}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="19" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <ToggleButton x:Name="Expander"
    	              Style="{StaticResource ExpandCollapseToggleStyle}"
    	              IsChecked="{Binding Path=IsExpanded,
    	                          RelativeSource={RelativeSource TemplatedParent}}"
    	              ClickMode="Press"/>
                        <ContentPresenter x:Name="PART_Header"
    				Grid.Column="1"
    	                ContentSource="Header"
    	                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Grid>
                </Border>
                <ItemsPresenter x:Name="ItemsHost" Margin="19,0,0,0" />
            </StackPanel>
            <!-- Triggers -->
        </ControlTemplate>
    </Window.Resources>
    
    <Grid Visibility="Visible">
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>
        
        <Grid Grid.Column="1" Height="Auto" HorizontalAlignment="Stretch" Name="gridContent" VerticalAlignment="Stretch" Width="Auto" Visibility="Hidden" Background="#FFA7E63B">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <DockPanel Name="dockPannel">
                <StackPanel HorizontalAlignment="Stretch" Name="stackPanel2" VerticalAlignment="Stretch" Grid.Column="0" Width="Auto" DockPanel.Dock="Top">
                    <Expander Header="Description" Height="Auto" Name="expanderDesc" Expanded="expanderDesc_Expanded" Collapsed="expanderDesc_Collapsed" Margin="0,10,0,0" Foreground="Black">
                        <Grid>
                            <TextBox Height="Auto" HorizontalAlignment="Stretch" Margin="10" Name="textBoxDesc" VerticalAlignment="Stretch" Width="Auto" MinHeight="100" TextWrapping="WrapWithOverflow" TextChanged="textBoxDesc_TextChanged" AcceptsReturn="False" AcceptsTab="False" TextInput="textBoxDesc_TextInput" />
                        </Grid>
                    </Expander>
                    <TextBlock Height="Auto" Name="textBlockDesc" Text="This task is all about blah blah blah. Blah Blah yada yada some more stuff." AllowDrop="False" UseLayoutRounding="False" TextWrapping="WrapWithOverflow" Margin="25,10,10,10" Foreground="White" />
                    <Expander Header="Details" Height="Auto" Name="expanderDetails" Expanded="expanderDetails_Expanded" Collapsed="expanderDetails_Collapsed" Margin="0,10,0,0" Foreground="Black">
                        <Grid>
                            <TextBox Height="Auto" HorizontalAlignment="Stretch" Margin="10" MinHeight="100" Name="textBoxDetails" TextWrapping="WrapWithOverflow" VerticalAlignment="Stretch" Width="Auto" TextChanged="textBoxDetails_TextChanged" AcceptsReturn="False" TextInput="textBoxDetails_TextInput" />
                        </Grid>
                    </Expander>
                    <TextBlock AllowDrop="False" Height="Auto" Name="textBlockDetails" Text="This task is all about blah blah blah. Blah Blah yada yada some more stuff." TextWrapping="WrapWithOverflow" UseLayoutRounding="False" Margin="25,10,10,10" Foreground="White" />
                    
                </StackPanel>
                <Button Content="Delete Task" Height="23" Name="buttonDelete" Width="75" DockPanel.Dock="Bottom" VerticalAlignment="Bottom" Margin="10" Click="buttonDelete_Click" Background="White" BorderBrush="#FFCFC2C2" />
            </DockPanel>
            <StackPanel HorizontalAlignment="Stretch" Margin="2,0,10,0" Name="stackPanelContent" VerticalAlignment="Stretch" Width="Auto" Grid.Column="1">
                <Label Content="Timeline" Height="28" Name="label1" Margin="0,8,0,0" Foreground="White" FontSize="13" />
                <Expander Header="Priority" Name="expanderPriority" Visibility="Visible" IsEnabled="True" VerticalAlignment="Top" Margin="0,10">
                    <Grid>
                        <ComboBox HorizontalAlignment="Stretch" Name="comboBox1" VerticalAlignment="Top" Width="Auto" Grid.Column="1" Margin="0,10" Background="White" BorderBrush="#FFCFC2C2" />
                    </Grid>
                </Expander>
                <Expander Header="Dates" Height="Auto" Name="expanderDates">
                    <Grid>
                        <StackPanel Height="Auto" HorizontalAlignment="Stretch" Name="stackPanel4" VerticalAlignment="Stretch" Width="Auto">
                            <Label Content="Started" HorizontalAlignment="Stretch" Name="label5" VerticalAlignment="Top" Padding="0,5" />
                            <DatePicker Height="Auto" HorizontalAlignment="Stretch" Name="datePickerStarted" VerticalAlignment="Top" Width="Auto" />
                            <Label Content="Due" HorizontalAlignment="Stretch" Name="label6" VerticalAlignment="Top" />
                            <DatePicker Height="Auto" HorizontalAlignment="Stretch" Name="datePickerDue" VerticalAlignment="Top" />
                        </StackPanel>
                    </Grid>
                </Expander>
                <Expander Header="Status" Height="Auto" Name="expanderStatus" Margin="0,10">
                    <Grid>
                        <StackPanel Height="Auto" HorizontalAlignment="Stretch" Name="stackPanel3" VerticalAlignment="Stretch" Width="Auto">
                            <RadioButton Content="Planning" Height="Auto" HorizontalAlignment="Stretch" Name="radioButtonPlanning" VerticalAlignment="Top" Margin="5" GroupName="radioStatus" Checked="radioButtonPlanning_Checked" />
                            <RadioButton Content="In Progress" Height="Auto" HorizontalAlignment="Stretch" Name="radioButtonInProgress" VerticalAlignment="Top" Margin="5" GroupName="radioStatus" Checked="radioButtonInProgress_Checked" />
                            <RadioButton Content="Blocked" Height="16" HorizontalAlignment="Stretch" Name="radioButtonBlocked" VerticalAlignment="Top" Margin="5" GroupName="radioStatus" Checked="radioButtonBlocked_Checked" />
                            <RadioButton Content="Finished" Height="16" Name="radioButtonFinished" VerticalAlignment="Top" Margin="5" GroupName="radioStatus" Checked="radioButtonFinished_Checked" />
                        </StackPanel>
                    </Grid>
                </Expander>
                
            </StackPanel>

        </Grid>
        <StackPanel HorizontalAlignment="Stretch" Name="stackPanel1" VerticalAlignment="Stretch">
            <Label Content="My Tasks" Name="label2" HorizontalContentAlignment="Center" FontWeight="Normal" Margin="0,10" />
            <Button Content="New Task" Name="buttonAdd" Margin="10,0,10,10" Click="buttonAdd_Click" Background="#FFA7E63B" BorderBrush="#FFCFC2C2" FontWeight="Normal" />
            <TreeView Name="treeViewTasks" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" SelectedItemChanged="treeViewTasks_SelectedItemChanged" BorderBrush="#FFA7E63B" ItemsSource="{Binding}" DataContext="{Binding}" BorderThickness="0">
                
            </TreeView>
            
        </StackPanel>
        <Label Content="Welcome to Taskly" Grid.Column="1" HorizontalAlignment="Center" Name="labelWelcome" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="22" FontFamily="7" Margin="-100,0,0,0" FontWeight="Normal" />
    </Grid>
</Window>
